import gzip
import re  
import http.cookiejar  
import urllib.request  
import urllib.parse

def ungzip(data):  
    try:        # 尝试解压  
        print('正在解压.....')  
        data = gzip.decompress(data)  
        print('解压完毕!')  
    except:  
        print('未经压缩, 无需解压')  
    return data
    
    
#获取_xsrf   
def getXSRF(data):  
    cer = re.compile('name=\"_xsrf\" value=\"(.*)\"', flags = 0)  
    strlist = cer.findall(data)  
    return strlist[0]  
#构造文件头  
def getOpener(head):  
    #设置一个cookie处理器，它负责从服务器下载cookie到本地，并且在发送请求时带上本地的cookie  
    cj = http.cookiejar.CookieJar()  
    pro = urllib.request.HTTPCookieProcessor(cj)  
    opener = urllib.request.build_opener(pro)  
    header = []  
    for key, value in head.items():  
        elem = (key, value)  
        header.append(elem)  
    opener.addheaders = header  
    return opener  
#构造header，一般header至少要包含一下两项。这两项是从抓到的包里分析得出的。     
header = {  
    'Connection': 'Keep-Alive',  
    'Accept': 'text/html, application/xhtml+xml, */*',  
    'Accept-Language': 'en-US,en;q=0.8,zh-Hans-CN;q=0.5,zh-Hans;q=0.3',  
    'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; rv:11.0) like Gecko',  
    'Accept-Encoding': 'gzip, deflate',  
    'Host': 'www.zhihu.com',  
    'DNT': '1'  
}  
   
url = 'http://www.zhihu.com/'  
opener = getOpener(header)  
op = opener.open(url)  
data = op.read()  
data = ungzip(data)     # 解压  
_xsrf = getXSRF(data.decode())  
#post数据接收和处理的页面（我们要向这个页面发送我们构造的Post数据）  
url += 'login/email'  
id = ''  
password = ''  
#构造Post数据，他也是从抓大的包里分析得出的。  
postDict = {  
        '_xsrf':_xsrf, #特有数据，不同网站可能不同    
        'email': id,  
        'password': password,  
        'rememberme': 'y'  
}  
#需要给Post数据编码    
postData = urllib.parse.urlencode(postDict).encode()  
op = opener.open(url, postData)  
data = op.read()  
data = ungzip(data)  
   
print(data.decode())      